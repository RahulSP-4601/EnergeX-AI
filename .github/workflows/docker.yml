name: CD - Build & Push images

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]

env:
  REGISTRY: docker.io
  IMAGE_NAMESPACE: ${{ secrets.DOCKERHUB_USERNAME }}
  LUMEN_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/energex-lumen
  NODE_IMAGE:  ${{ secrets.DOCKERHUB_USERNAME }}/energex-node-cache

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Only log in if BOTH secrets exist
      - name: Log in to Docker Hub
        if: ${{ secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compute tags
        id: meta
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "branch" ]]; then
            echo "LUMEN_TAGS=type=raw,value=latest" >> $GITHUB_OUTPUT
            echo "NODE_TAGS=type=raw,value=latest"  >> $GITHUB_OUTPUT
          else
            ver="${GITHUB_REF_NAME#v}"
            echo "LUMEN_TAGS=type=raw,value=${ver},type=raw,value=latest" >> $GITHUB_OUTPUT
            echo "NODE_TAGS=type=raw,value=${ver},type=raw,value=latest"  >> $GITHUB_OUTPUT
          fi

      - name: Build & push Lumen API image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/lumen.Dockerfile
          # push only if secrets present (logged in)
          push: ${{ secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN }}
          tags: ${{ env.LUMEN_IMAGE }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.repository }}

      - name: Build & push Node cache image
        uses: docker/build-push-action@v6
        with:
          context: ./node-cache-service
          file: ./node-cache-service/Dockerfile
          push: ${{ secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN }}
          tags: ${{ env.NODE_IMAGE }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
