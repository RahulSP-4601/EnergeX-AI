name: CD - Build & Push images

on:
  push:
    branches: [ "main" ]
    tags:     [ "v*" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Derive a single "should we push?" flag without using `secrets` in expressions
      - name: Compute push flag and image names
        id: cfg
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN:   ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          # decide push flag
          if [[ -n "$DOCKERHUB_USERNAME" && -n "$DOCKERHUB_TOKEN" ]]; then
            echo "push=true" >> "$GITHUB_OUTPUT"
          else
            echo "push=false" >> "$GITHUB_OUTPUT"
          fi
          # image names (only need username; empty -> local-only tags)
          if [[ -n "$DOCKERHUB_USERNAME" ]]; then
            echo "lumen_image=${DOCKERHUB_USERNAME}/energex-lumen" >> "$GITHUB_OUTPUT"
            echo "node_image=${DOCKERHUB_USERNAME}/energex-node-cache" >> "$GITHUB_OUTPUT"
          else
            # fallback so build still works (local tags)
            echo "lumen_image=energex-lumen" >> "$GITHUB_OUTPUT"
            echo "node_image=energex-node-cache" >> "$GITHUB_OUTPUT"
          fi

      - name: Log in to Docker Hub
        if: ${{ steps.cfg.outputs.push == 'true' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compute tags
        id: meta
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "branch" ]]; then
            echo "lumen_tags=latest" >> "$GITHUB_OUTPUT"
            echo "node_tags=latest"  >> "$GITHUB_OUTPUT"
          else
            ver="${GITHUB_REF_NAME#v}"
            echo "lumen_tags=${ver},latest" >> "$GITHUB_OUTPUT"
            echo "node_tags=${ver},latest"  >> "$GITHUB_OUTPUT"
          fi

      - name: Build & push Lumen API image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/lumen.Dockerfile
          push: ${{ steps.cfg.outputs.push == 'true' }}
          # supports comma-separated list of tags
          tags: ${{ steps.cfg.outputs.lumen_image }}:${{ steps.meta.outputs.lumen_tags }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}

      - name: Build & push Node cache image
        uses: docker/build-push-action@v6
        with:
          context: ./node-cache-service
          file: ./node-cache-service/Dockerfile
          push: ${{ steps.cfg.outputs.push == 'true' }}
          tags: ${{ steps.cfg.outputs.node_image }}:${{ steps.meta.outputs.node_tags }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
